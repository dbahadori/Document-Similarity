<?xml version="1.0" encoding="utf-8"?>
<Document>
  <Name>Framework Selection Criterias-v0.1-docx</Name>
  <Title></Title>
  <Abstract></Abstract>
  <Authors />
  <Keywords></Keywords>
  <Body>معیارهای انتخاب چارچوب مناسب برای توسعه برنامه کاربردی پنجره واحد


قابلیت‌های اصلی (Core): 
هدف اصلی از انتخاب یک چارچوب توسعه برنامه‌های کاربردی، کاهش تلاش و افزایش سرعت در کد نویسی می‌باشد. هرچه قابلیت‌های ارائه شده توسط هسته‌ی چارچوب منتخب بیشتر بوده و همچنین متناسب با نیازهای برنامه کاربردی باشد، چارچوب مربوطه دارای الویت بیشتری در انتخاب خواهد بود. 
قابلیت‌های ارائه شده توسط هسته‌ی چارچوب همچون 
Caching
Data Handling (Data Serialization) 
Data Validation
Template
Mapping (URL Mapping, Model to View Mapping) 
Design Patterns
Multiplatform
Transaction Management
Message Mediator
Queuing
interception
IO Utilities
Logging
Argument Checking
Notify Property Changed
Error handling
Job Scheduling



بروز بودن در تغییرات و تکامل
زنده بودن پروژه جزو معیارهای بسیار حائز اهمیت می‌باشد. پروژه چارچوب منتخب می‌بایست در فاصله زمانی‌های نسبتاً کوتاه نسخه‌های جدید خود را منتشر کند. بنابراین زمان انتشار آخرین نسخه نباید در گذشته دور باشد. 
همچنین پاسخگویی به سوالات و مسائل درخواست شده توسط استفاده کنندگان پروژه چارچوب منتخب می‌بایست بطور متوسط ۲ الی ۳ روز باشد. 
اشکال زدایی پروژه باید در کمترین زمان ممکن قبل از ارائه نسخه جدید صورت گیرد. مدت زمان ۵ الی ۷ روز زمان قابل قبولی می‌باشد. 

مستندات
مستندات پروژه‌ی چارچوب منتخب می‌بایست به راحتی قابل جستجو، کشف و دسترسی باشد. همچنین مستندات زمانی می‌توانند به خوبی قابل استفاده باشند که به همراه خود مثال‌های مختلف و متعددی را ارائه کنند. 
برخی از مستندات با استفاده زبانXML اطلاعات مفیدی در رابطه با متدها و جزئیات مربوطه به آن‌ها را در محیط توسعه فراهم می‌کنند که موجب راحتی تیم توسعه دهنده در استفاده از API می‌شود. 

انجمن ها
پروژه‌ی چارچوب منتخب می‌بایست دارای فروم‌ها، گروه‌ها، کنفرانس‌های متعدد و فعالی باشد تا در صورت نیاز بتوان از تجربیات و نقطه نظرات دیگر کاربران و متخصصین مربوطه بهره گرفت. 

UnitTest
چارچوب منتخب باید به گونه‌ای طراحی شده باشد که این امکان را برای توسعه دهنده فراهم آورد که بتواند مؤلفه‌های برنامه‌ی کاربردی خود را به سادگی و مستقل از یکدیگر تست کند. 



قابلیت توسعه
چارچوب منتخب باید دارای نقاط توسعه باشد تا با استفاده از این نقاط، توسعه دهنده برنامه کاربردی بتواند مؤلفه‌های مورد نیاز خود را از ابتدا (Scratch) توسعه داده و به چارچوب اضافه کند. همچنین باید این امکان را فراهم آورد که از مؤلفه‌های پیاده سازی شده موجود (توسط شخص یا شرکت‌های ثالث) استفاده کرده و آن‌ها را بصورت پلاگین به چارچوب اضافه کند. 
بنابراین در دسترس بودن مولفه‌های توسعه یافته دیگر، برای توسعه چارچوب منتخب نیز حائز اهمیت می‌باشد. 

ثبات و قابلیت اعتماد چارچوب
پرژه چارچوب منتخب می‌بایست دارای ثبات بالایی باشد تا بتوان به آن هم در حال حاضر و هم در آینده دور اعتماد کرد. بنابراین زمان شروع پروژه چارچوب منتخب مهم می‌باشد. همچنین چارچوب می‌بایست در محیط‌ها و پلت فرم‌های مختلف (در صورت پشتیبانی) دارای خروجی یکسان و کارایی تقریبا یکسانی باشد. از اینرو وجود اطلاعات ارائه شده از تست‌های مختلف بر روی چارچوب می‌تواند گواه ثبات پروژه باشد. 

هدف و تمرکز چارچوب
هدف و تمرکز چارچوب منتخب می‌بایست متناسب با نیازمندی‌های برنامه کاربردی باشد. هرچه هدف چارچوب به نیازمندی‌ها و دغدغه‌های برنامه کاربردی نزدیکتر باشد، کارکردها و قابلیت‌های فراهم شده توسط چارچوب بهتر می‌تواند نیازهای کارکردی و غیرکارکردی برنامه کاربردی را برآورده کند. 
به عنوان مثال اگر یکی از دغدغه‌های اصلی برنامه کاربردی اجرا شدن بر روی چندین پلت فرم سیستم عامل باشد، چارچوبی که هدف و تمرکز آن ارائه یک چارچوب توسعه‌ای Cross-Platform باشد میتواند از الویت بالاتری برخوردار باشد. 




مدت زمان یادگیری (منحنی یادگیری) 
مدت زمان یادگیری چارچوب منتخب توسط تیم توسعه نیز حائز اهمیت می‌باشد. هر چه چارچوب منتخب از زبان، رویکرد، ابزار و … که تیم توسعه در رابطه با آن‌ها تجربه و شناخت دارند استفاده کند، زمان یادگیری را کاهش می‌دهد. 

امنیت
الگوها، مکانیزم‌‌ها، رویه و روش‌های به کارگرفته شده توسط چارچوب برای فراهم کردن امنیت مورد نیاز برنامه‌های کاربردی (به عنوان مثالAuthentication و Authorization) نیز یکی از معیارهای حائز اهمیت در انتخاب چارچوب مناسب است. 

پشتیبانی از مرزهای تکنولوژی
چارچوب منتخب می‌بایست با پیشرفت تکنولوژهای دات نت همگام باشد تا بتوان با استفاده از آن از قابلیت‌های فراهم شده توسط تکنولوژی‌های جدید بهره گرفت. به عبارتی دیگر چارچوب باید در پشتیبانی از تکنیکها، تکنولوژی‌ها، الگوها، چارچوب‌های دیگر به اصطلاح State of the art باشد. 

انعطاف پذیری و عدم آن
هرچه چارچوب به گونه‌ای طراحی شده باشد که تیم توسعه دهنده را اجبار به استفاده از الگو، چارچوب، رویکرد و روش (های) خاصی نکند، آزادی انتخاب و عمل را برای توسعه بیشتر فراهم می‌کند. 

ارائه قالب
چارچوبی که قالب‌های از پیش تعریف شده را فراهم کرده و به محیط توسعه اضافه می‌کند، موجب راحتی تیم توسعه و افزایش سرعت توسعه برنامه کاربردی و همچنین یکپارچگی در الگوی استفاده شده برای ساختاربندی مسیرهای فایل‌های پروژه می‌شود. 


عنوان معیار
ضریب اهمیت (کمی) 
میزان اهمیت (کیفی) 

قابلیت‌های اصلی (Core) 
۵
خیلی بالا

بروز بودن در تغییرات و تکامل
۴. ۵
خیلی بالا

مستندات
۴
بالا

Community
۴
بالا

UnitTest
۴
بالا

قابلیت توسعه
۴
بالا

ثبات و قابلیت اعتماد چارچوب
۴
بالا

هدف و تمرکز چارچوب
۳. ۵
بالا

منحنی یادگیری
۳. ۵
بالا

امنیت
۳
متوسط

پشتیبانی از مرزهای تکنولوژی
۳
متوسط

انعطاف پذیری و عدم آن
۳
متوسط

ارائه قالب
۳
متوسط

راحتی در راه اندازی 
۲. ۵
متوسط

License
۲
پایین



</Body>
  <Type>Structural</Type>
  <Year></Year>
</Document>